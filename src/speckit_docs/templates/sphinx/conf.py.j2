# Configuration file for the Sphinx documentation builder.
#
# This file was auto-generated by speckit-docs.
# For the full list of built-in configuration values, see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Project information -----------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#project-information

project = "{{ project_name }}"
copyright = "{{ year }}, {{ author }}"
author = "{{ author }}"
version = "{{ version }}"
release = "{{ version }}"

# -- General configuration ---------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#general-configuration

extensions = [
    'myst_parser',              # FR-005a: MyST Markdown support
    'sphinx.ext.autodoc',       # Optional: API documentation
    'sphinx.ext.viewcode',      # Optional: Source code links
    'sphinx.ext.napoleon',      # Optional: Google/NumPy docstring support
]

templates_path = ['_templates']
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# -- Options for HTML output -------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-html-output

html_theme = '{{ theme | default("alabaster") }}'
html_static_path = ['_static']

# -- Options for internationalization ----------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-internationalization

language = '{{ language }}'

# -- MyST Parser configuration -----------------------------------------------
# https://myst-parser.readthedocs.io/en/latest/configuration.html

# Source file configuration (FR-005a: Markdown support)
source_suffix = {
    '.rst': 'restructuredtext',
    '.md': 'markdown',
}

# MyST Markdown extensions (FR-005a)
myst_enable_extensions = [
    "colon_fence",              # ::: fence for directives
    "deflist",                  # Definition lists
    "tasklist",                 # - [ ] task lists
    "attrs_inline",             # {{ '{#' }}id .class} attributes
]
